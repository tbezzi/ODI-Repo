<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="Dq7K4vVpqPpG30co0+EGCw==" exportKeySalt="ff476c77-50de-44b4-8c96-e2c75c299b88" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplate">
		<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2022-01-13 10:49:47.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fa46ec9e-2d00-11e6-942d-00163e1ffd72]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndIsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLangTrans" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndReplNl" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="LangName" type="java.lang.String"><![CDATA[PYTHON]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2022-01-13 10:49:49.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="Name" type="java.lang.String"><![CDATA[SparkLookupCmd]]></Field>
	<Field name="TechnoName" type="java.lang.String"><![CDATA[SPARK_PYTHON]]></Field>
	<Field name="TemplateText" type="java.lang.String"><![CDATA[
{# IF ($[USE_DATAFRAMES] == 'true') #}
{# INCLUDE = 'SparkLookupCmdDF' #}
{# ELSE #}
{# IF ($[STREAMING_MODE] == 'true') #}
{# INCLUDE = 'SparkLookupCmdStreaming' #}
{# ELSE #}
{# IF ($[CACHE_BASED_ON_KEYS] == 'true' )#}
driverKeys = set( $[DRIVER_ALIAS].map(lambda $[DRIVER_ALIAS]:$[DRIVER_KEY]).collect())
$[LOOKUP_ALIAS] = loadLookupSource(sc, driverKeys)
{# ENDIF #}
lookupSource = $[LOOKUP_ALIAS]
lookupDriver = $[DRIVER_ALIAS]
{# IF ($[NO_MATCH] == 'DEFAULT_VALUES') #}
def defaultValue$[LOOKUP_POSTFIX]($[LOOKUP_RDD_SHAPE]): return $[DEFAULT_VALUE_CREATION]
{# ENDIF #}
{# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}
lookupDriver = lookupDriver.keyBy(lambda $[DRIVER_RDD_SHAPE]: {# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}$[DRIVER_KEY]{# ELSE #}None{# ENDIF #})
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print("========= %s   : lookupDriver keyBy =========" % type(lookupDriver).__name__)
for line in lookupDriver.collect():
    print line
{# ENDIF #}
lookupSource = lookupSource.keyBy(lambda $[LOOKUP_RDD_SHAPE]: {# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}$[LOOKUP_KEY]{# ELSE #}None{# ENDIF #})
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print("========= %s   : lookupSource keyBy =========" % type(lookupSource).__name__)
for line in lookupSource.collect():
    print line
{# ENDIF #}
{# ENDIF #}
{# IF ($[IS_MAP_SIDE] == 'true') #}
lookupVariable$[LOOKUP_POSTFIX] = lookupSource.{# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}groupByKey().collectAsMap(){# ELSE #}collect(){# ENDIF #}
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print("========= %s   : lookupVariable$[LOOKUP_POSTFIX] =========" % type(lookupVariable$[LOOKUP_POSTFIX]).__name__)
if type(lookupVariable$[LOOKUP_POSTFIX]).__name__ == 'dict' :
  for k,v in lookupVariable$[LOOKUP_POSTFIX].iteritems() :
    print k
    for line in v:
      print line
else :
  for v in lookupVariable$[LOOKUP_POSTFIX] :
    print v
{# ENDIF #}
lookupVariable$[LOOKUP_POSTFIX] = sc.broadcast(lookupVariable$[LOOKUP_POSTFIX])
def joinFunc$[LOOKUP_POSTFIX](iterator):
  lookupMap = lookupVariable$[LOOKUP_POSTFIX].value
  for elem in iterator:
{# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}
{# IF ($[NO_MATCH] == 'NO_ROW') #}
    yield (elem[1], lookupMap.get(elem[0]).data if  lookupMap.has_key(elem[0]) else [])
{# ELSE #}
    yield (elem[1], lookupMap.get(elem[0]).data if  lookupMap.has_key(elem[0]) else [defaultValue$[LOOKUP_POSTFIX](elem[1])])
{# ENDIF #}
{# ELSE #}
    $[DRIVER_RDD_SHAPE] = elem
    matchedLines = filter(lambda $[LOOKUP_RDD_SHAPE] : safeExpr(lambda : $[LOOKUP_COND] , False), lookupMap)
{# IF ($[NO_MATCH] == 'NO_ROW') #}
    yield (elem, matchedLines if len(matchedLines) > 0 else [])
{# ELSE #}
    yield (elem, matchedLines if len(matchedLines) > 0 else [defaultValue$[LOOKUP_POSTFIX](elem)])
{# ENDIF #}
{# ENDIF #}
lookupResult = lookupDriver.mapPartitions(joinFunc$[LOOKUP_POSTFIX]){# IF ($[NTHROW] == '-1') #}.flatMapValues(lambda l : l){# ENDIF #}
{# ELSE #}
{# IF ($[SIMPLE_EQUL_LOOKUP] == 'true') #}
{# IF ($[NO_MATCH] == 'NO_ROW') #}
lookupResult = lookupDriver.join(lookupSource{# IF ($[LEVEL_PARALLELISM] > '0') #}, $[LEVEL_PARALLELISM]{# ENDIF #}).mapValues(lambda line: (line[0],line[1])).map(lambda line: line[1])
{# ELSE #}
leftOuterJoinResult = lookupDriver.leftOuterJoin(lookupSource{# IF ($[LEVEL_PARALLELISM] > '0') #}, $[LEVEL_PARALLELISM]{# ENDIF #}).mapValues(lambda line: (line[0],line[1])).map(lambda line: line[1])
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print("========= %s   : leftOuterJoinResult =========" % type(leftOuterJoinResult).__name__)
for line in leftOuterJoinResult.collect():
    print line
{# ENDIF #}
lookupResult = leftOuterJoinResult.map(lambda (d, l) : (d, l) if l != None else (d, defaultValue$[LOOKUP_POSTFIX](d)))
{# ENDIF #}
{# ELSE #}
cartesianResult = lookupDriver.cartesian(lookupSource)
leftOuterJoinResult = cartesianResult.filter(lambda ($[DRIVER_RDD_SHAPE],$[LOOKUP_RDD_SHAPE]): safeExpr(lambda : $[LOOKUP_COND], False))
{# IF ($[NO_MATCH] == 'NO_ROW') #}
lookupResult = leftOuterJoinResult
{# ELSE #}
subtrahend = leftOuterJoinResult.map(lambda line:line[0])
defaultResult = lookupDriver.subtract(subtrahend).map(lambda line:(line, defaultValue$[LOOKUP_POSTFIX](line)))
lookupResult = leftOuterJoinResult.union(defaultResult)
{# ENDIF #}
{# ENDIF #}
{# ENDIF #}
{# IF ($[NTHROW] != '-1') #}
{# IF ($[IS_MAP_SIDE] == 'false') #}
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print "========== lookupResult before groupBy ====================================="
for line in lookupResult.collect() :
  print line
{# ENDIF #}
lookupResult = lookupResult.groupByKey().map(lambda (l, v) : (l, list(v)))
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print "========== lookupResult after groupByKey ====================================="
for line in lookupResult.collect() :
  print "=========="
  print line[0]
  print "=========="
  for line_detail in line[1] :
    print line_detail
{# ENDIF #}
{# IF ($[ERROR_WHEN_MULTIPLE_ROW] == 'true') #}
def checkMultipleRows (v) :
  if len(v) > 1 :
    raise Exception('ODIKM-SPARK-LOOKUP-10000 : Multiple match rows fetched for one of the lookup keys. This exception is triggered because of your lookup component setting for Multiple Match Rows property as "Error : multiple rows will cause a mapping failure".')
  return v;
lookupResult = lookupResult.map(lambda (l, v) : (l, checkMultipleRows(v)))
{# ENDIF #}
{# IF ($[ANY_ROW] == 'false') #}
def sortMultipleRows$[LOOKUP_POSTFIX] (lst) :
  {# FOR ($[LOOKUP_RDD_SHAPES],$[ORDERBY_EXPRS],$[ORDERBY_TYPES_MAP_SIDE]) IN ($[LOOKUP_RDD_SHAPE_ONE],$[ORDERBY_EXPR],$[ORDERBY_TYPE]) SEP = '
  ' #}lst = sorted(lst, key=lambda $[LOOKUP_RDD_SHAPE_ONE]:safeExpr(lambda:$[ORDERBY_EXPR],None), reverse=$[ORDERBY_TYPE]){# ENDFOR #}
  return lst
lookupResult = lookupResult.map(lambda (l, v) : (l, sortMultipleRows$[LOOKUP_POSTFIX](v) if len(v)>1 else v))
{# IF ($[SPARK_STREAMING_DEBUG] == 'true') #}
print "========== lookupResult after sort ====================================="
for line in lookupResult.collect() :
  print "=========="
  print line[0]
  print "=========="
  for line_detail in line[1] :
    print line_detail
{# ENDIF #}
{# ENDIF #}
{# IF ($[RETURN_DEFAULT_IF_NTH_MISSING] == 'true') #}
$[TGT_ALIAS] = lookupResult.map(lambda (l, v) : (l, defaultValue$[LOOKUP_POSTFIX](l)) if len(v)==0 else {# IF ($[NTHROW] == '0') #}(l,v[len(v)-1]){# ELSE #}(l,v[$[NTHROW]-1]) if len(v)>=$[NTHROW] else (l, defaultValue$[LOOKUP_POSTFIX](l)){# ENDIF #})
{# ELSE #}
$[TGT_ALIAS] = lookupResult.map(lambda (l, v) : (l, defaultValue$[LOOKUP_POSTFIX](l)) if len(v)==0 else (l,v[0]) if len(v)==1 else {# IF ($[NTHROW] == '0') #}(l,v[len(v)-1]){# ELSE #}(l,v[$[NTHROW]-1]) if len(v)>=$[NTHROW] else (l, defaultValue$[LOOKUP_POSTFIX](l)){# ENDIF #})
{# ENDIF #}
{# ELSE #}
{# IF ($[ERROR_WHEN_MULTIPLE_ROW] == 'true') #}
def checkMultipleRows (v) :
  if len(v) > 1 :
    raise Exception('ODIKM-SPARK-LOOKUP-10000 : Multiple match rows fetched for one of the lookup keys. This exception is triggered because of your lookup component setting for Multiple Match Rows property as "Error : multiple rows will cause a mapping failure".')
  return v;
lookupResult = lookupResult.map(lambda (l, v) : (l, checkMultipleRows(v)))
{# ENDIF #}
{# IF ($[ANY_ROW] == 'false') #}
def sortMultipleRows$[LOOKUP_POSTFIX] (lst) :
  {# FOR ($[LOOKUP_RDD_SHAPES],$[ORDERBY_EXPRS],$[ORDERBY_TYPES_MAP_SIDE]) IN ($[LOOKUP_RDD_SHAPE_ONE],$[ORDERBY_EXPR],$[ORDERBY_TYPE]) SEP = '
  ' #}lst = sorted(lst, key=lambda $[LOOKUP_RDD_SHAPE_ONE]:safeExpr(lambda:$[ORDERBY_EXPR],None), reverse=$[ORDERBY_TYPE]){# ENDFOR #}
  return lst
lookupResult = lookupResult.map(lambda (l, v) : (l, sortMultipleRows$[LOOKUP_POSTFIX](v) if len(v)> 1 else v))
{# ENDIF #}
{# IF ($[RETURN_DEFAULT_IF_NTH_MISSING] == 'true') #}
$[TGT_ALIAS] = lookupResult.map(lambda (l, v) : (l, defaultValue$[LOOKUP_POSTFIX](l)) if len(v)==0 else {# IF ($[NTHROW] == '0') #}(l,v[len(v)-1]){# ELSE #}(l,v[$[NTHROW]-1]) if len(v)>=$[NTHROW] else (l, defaultValue$[LOOKUP_POSTFIX](l)){# ENDIF #})
{# ELSE #}
$[TGT_ALIAS] = lookupResult.map(lambda (l, v) : (l, defaultValue$[LOOKUP_POSTFIX](l)) if len(v)==0 else (l,v[0]) if len(v)==1 else {# IF ($[NTHROW] == '0') #}(l,v[len(v)-1]){# ELSE #}(l,v[$[NTHROW]-1]) if len(v)>=$[NTHROW] else (l, defaultValue$[LOOKUP_POSTFIX](l)){# ENDIF #})
{# ENDIF #}
{# ENDIF #}
{# ELSE #}
$[TGT_ALIAS] = lookupResult
{# ENDIF #}
{# ENDIF #}
{# INCLUDE = 'SparkPartitionRedistributeAndSort' #}
{# ENDIF #}
    ]]></Field>
	<Field name="TemplateVersion" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c44ccadb-5e21-460a-b7fe-f04cef6e149d]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="IKmTemplateRef" type="com.sunopsis.sql.DbInt"><![CDATA[116]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8b34ac0a-066a-436b-bc3f-f16450df5f5f]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="IKmTemplateRef" type="com.sunopsis.sql.DbInt"><![CDATA[142]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eade4780-ff8d-475c-ad66-7b4818e914da]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="IKmTemplateRef" type="com.sunopsis.sql.DbInt"><![CDATA[169]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[df531256-e7ca-4e1d-976b-cab17f86c861]]></Field>
	<Field name="IKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="IKmTemplateRef" type="com.sunopsis.sql.DbInt"><![CDATA[173]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[af00def6-183a-4487-b867-626f8e5a44e5]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[142]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bd056fb2-7f0c-450e-b218-a1e8f3a3b2f8]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[146]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[108f5647-8deb-4a4d-a641-83f397fff49e]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[137]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[96a9682c-ebd0-4dd9-baeb-e572294d2ab6]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[147]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1c59aee0-2af1-450e-a2f3-73c6f471387c]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[161]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a7efd713-a825-480e-911b-310a4f421948]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[140]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpKmTemplateJoin">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[50212ee5-677e-4377-8575-6dc6549df830]]></Field>
	<Field name="ISnpKmTemplate" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ISnpTrt" type="com.sunopsis.sql.DbInt"><![CDATA[144]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.115]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46ec9e-2d00-11e6-942d-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkLookupCmd]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[14]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.116]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa46ecd0-2d00-11e6-942e-00163e1ffd72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkLookupCmdStreaming]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.142]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[97fe9946-a4d5-4618-a15a-8d5b13a74326]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPartitionRedistributeAndSort]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[33]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.169]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c5f54dca-279c-4de1-a552-1e270cbca8f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkLookupCmdDF]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE.173]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0519558e-4d77-490a-bacb-69b2a2b2fad5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[SparkPartitionRedistributeAndSortDF]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_KMTEMPLATE]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.142]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c2f113d5-e22b-4237-b25c-545872875536]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to Hive]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.146]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1FD1D82B9F005A53E053CCC0E40AC733]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to SQL]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.137]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1986feab-eca2-4f5a-96a8-ecf827ac7cda]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to File]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.147]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[28C4768839C04BAEE053CCC0E40AAAF7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to Cassandra]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.161]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[310d86cf-27e0-48c0-ae73-82685449bcce]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[IKM Spark Table Function]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.140]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2B7D95B0B8A32C45E053E603C40A5DCB]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to HDFS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.144]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[dabbcab5-caeb-423c-b6f2-bfb106747464]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Spark to Kafka]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[18]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[12]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
